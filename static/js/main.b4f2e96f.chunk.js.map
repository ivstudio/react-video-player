{"version":3,"sources":["components/SearchHeader/SearchHeader.js","components/Playlist/PlaylistItem/PlaylistItem.js","components/Playlist/Playlist.js","components/VideoMain/VideoMain.js","containers/VideoPlayer/VideoPlayer.js","App.js","index.js"],"names":["SearchHeader","handleSearch","useState","term","setSterm","className","value","placeholder","onChange","e","target","VideoItem","video","handleSelect","snippet","title","channelTitle","thumbnails","onClick","alt","src","medium","url","Playlist","videos","map","PlaylistItem","key","etag","VideoMain","description","videoId","id","VideoPlayer","activeVideo","setActiveVideo","videoList","setVideoList","fetchVideos","YTSearch","process","useEffect","onVideoSearch","debounce","App","ReactDOM","render","document","getElementById"],"mappings":"4QA2BeA,EAxBM,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAAmB,EACjBC,mBAAS,IADQ,mBACnCC,EADmC,KAC7BC,EAD6B,KAQ1C,OACC,yBAAKC,UAAU,iBACd,2BACCC,MAAOH,EACPI,YAAY,SACZC,SAVmB,SAAAC,GACrBL,EAASK,EAAEC,OAAOJ,OAClBL,EAAaQ,EAAEC,OAAOJ,QASpBD,UAAU,2BCcCM,EA5BG,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,aAAmB,EACFD,EAAME,QAA1CC,EADsC,EACtCA,MAAOC,EAD+B,EAC/BA,aAAcC,EADiB,EACjBA,WAK7B,OACC,6BAASC,QALa,WACtBL,EAAaD,IAIqBP,UAAU,iBAC3C,yBAAKA,UAAU,wBACd,yBACCc,IAAKJ,EACLV,UAAU,uBACVe,IAAKH,EAAWI,OAAOC,OAGzB,yBAAKjB,UAAU,4BACd,wBAAIA,UAAU,wBAAwBU,GACtC,0BAAMV,UAAU,0BAA0BW,MCK/BO,EArBE,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQX,EAAmB,EAAnBA,aAC3B,OACC,yBAAKR,UAAU,YACbmB,EAAOC,KAAI,SAAAb,GACX,OACC,kBAACc,EAAD,CACCb,aAAcA,EACdc,IAAKf,EAAMgB,KACXhB,MAAOA,SCuBEiB,EAhCG,SAAC,GAAe,IAAbjB,EAAY,EAAZA,MACpB,IAAKA,EACJ,OAAO,2CAFwB,MAIaA,EAAME,QAA3CC,EAJwB,EAIxBA,MAAOe,EAJiB,EAIjBA,YAAad,EAJI,EAIJA,aACtBe,EAAUnB,EAAMoB,GAAGD,QACnBT,EAAG,wCAAoCS,GAE7C,OACC,6BAAS1B,UAAU,cAClB,yBAAKA,UAAU,gCACd,4BACCe,IAAKE,EACLP,MAAOA,EACPV,UAAU,uCAGZ,yBAAKA,UAAU,uBACd,wBAAIA,UAAU,6BAA6BU,GAC3C,uBAAGV,UAAU,mCAAmCyB,GAChD,0BAAMzB,UAAU,+BACdW,MCkBSiB,EAhCK,WAAO,IAAD,EACa/B,mBAAS,MADtB,mBAClBgC,EADkB,KACLC,EADK,OAESjC,mBAAS,IAFlB,mBAElBkC,EAFkB,KAEPC,EAFO,KAInBC,EAAc,SAAAnC,GACnBoC,IAAS,CAAEZ,IAPGa,0CAOWrC,KAAMA,IAAQ,SAAAqB,GACtCW,EAAeX,EAAO,IACtBa,EAAab,OAIfiB,qBAAU,WACTH,EAAY,cACV,IAEH,IAAMI,EAAgBC,KAAS,SAAAxC,GAAI,OAAImC,EAAYnC,KAAO,KAG1D,OACC+B,GACC,yBAAK7B,UAAU,sBACd,kBAAC,EAAD,CAAWJ,aAAcyC,IAEzB,0BAAMrC,UAAU,gBACf,kBAAC,EAAD,CAAWO,MAAOsB,IAClB,kBAAC,EAAD,CAAUrB,aATQ,SAAAD,GAAK,OAAIuB,EAAevB,IASHY,OAAQY,OC9BrCQ,EAFH,kBAAM,kBAAC,EAAD,O,MCClBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b4f2e96f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchHeader = ({ handleSearch }) => {\n\tconst [term, setSterm] = useState('');\n\n\tconst onInputChange = e => {\n\t\tsetSterm(e.target.value);\n\t\thandleSearch(e.target.value);\n\t};\n\n\treturn (\n\t\t<div className=\"search-header\">\n\t\t\t<input\n\t\t\t\tvalue={term}\n\t\t\t\tplaceholder=\"Search\"\n\t\t\t\tonChange={onInputChange}\n\t\t\t\tclassName=\"search-header__input\"\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nSearchHeader.propTypes = {\n\tSearchHeader: PropTypes.func\n};\n\nexport default SearchHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst VideoItem = ({ video, handleSelect }) => {\n\tconst { title, channelTitle, thumbnails } = video.snippet;\n\tconst onHandleSelect = () => {\n\t\thandleSelect(video);\n\t};\n\n\treturn (\n\t\t<article onClick={onHandleSelect} className=\"playlist-item\">\n\t\t\t<div className=\"playlist-item__media\">\n\t\t\t\t<img\n\t\t\t\t\talt={title}\n\t\t\t\t\tclassName=\"playlist-item__image\"\n\t\t\t\t\tsrc={thumbnails.medium.url}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"playlist-item__container\">\n\t\t\t\t<h3 className=\"playlist-item__title\">{title}</h3>\n\t\t\t\t<span className=\"playlist-item__channel\">{channelTitle}</span>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n\nVideoItem.propTypes = {\n\tvideo: PropTypes.object,\n\thandleSelect: PropTypes.func\n};\n\nexport default VideoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PlaylistItem from './PlaylistItem/PlaylistItem';\n\nconst Playlist = ({ videos, handleSelect }) => {\n\treturn (\n\t\t<div className=\"playlist\">\n\t\t\t{videos.map(video => {\n\t\t\t\treturn (\n\t\t\t\t\t<PlaylistItem\n\t\t\t\t\t\thandleSelect={handleSelect}\n\t\t\t\t\t\tkey={video.etag}\n\t\t\t\t\t\tvideo={video}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nPlaylist.propTypes = {\n\tvideos: PropTypes.array,\n\thandleSelect: PropTypes.func\n};\n\nexport default Playlist;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst VideoMain = ({ video }) => {\n\tif (!video) {\n\t\treturn <div>Loading...</div>;\n\t}\n\tconst { title, description, channelTitle } = video.snippet;\n\tconst videoId = video.id.videoId;\n\tconst url = `https://www.youtube.com/embed/${videoId}`;\n\n\treturn (\n\t\t<section className=\"video-main\">\n\t\t\t<div className=\"video-main__embed-responsive\">\n\t\t\t\t<iframe\n\t\t\t\t\tsrc={url}\n\t\t\t\t\ttitle={title}\n\t\t\t\t\tclassName=\"video-main__embed-responsive-item\"></iframe>\n\t\t\t</div>\n\n\t\t\t<div className=\"video-main__content\">\n\t\t\t\t<h3 className=\"video-main__content-title\">{title}</h3>\n\t\t\t\t<p className=\"video-main__content-description\">{description}</p>\n\t\t\t\t<span className=\"video-main__content-channel\">\n\t\t\t\t\t{channelTitle}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nVideoMain.propTypes = {\n\tvideos: PropTypes.object\n};\n\nexport default VideoMain;\n","import React, { useState, useEffect } from 'react';\nimport debounce from 'lodash/debounce';\nimport YTSearch from 'youtube-api-search';\n\nimport SearchBar from '../../components/SearchHeader/SearchHeader';\nimport Playlist from '../../components/Playlist/Playlist';\nimport VideoMain from '../../components/VideoMain/VideoMain';\n\nconst API_KEY = process.env.REACT_APP_YOUTUBE_KEY;\n\nconst VideoPlayer = () => {\n\tconst [activeVideo, setActiveVideo] = useState(null);\n\tconst [videoList, setVideoList] = useState([]);\n\n\tconst fetchVideos = term => {\n\t\tYTSearch({ key: API_KEY, term: term }, videos => {\n\t\t\tsetActiveVideo(videos[0]);\n\t\t\tsetVideoList(videos);\n\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tfetchVideos('drummers');\n\t}, []);\n\n\tconst onVideoSearch = debounce(term => fetchVideos(term), 500);\n\tconst onVideoSelect = video => setActiveVideo(video);\n\n\treturn (\n\t\tactiveVideo && (\n\t\t\t<div className=\"video-player__page\">\n\t\t\t\t<SearchBar handleSearch={onVideoSearch} />\n\n\t\t\t\t<main className=\"video-player\">\n\t\t\t\t\t<VideoMain video={activeVideo} />\n\t\t\t\t\t<Playlist handleSelect={onVideoSelect} videos={videoList} />\n\t\t\t\t</main>\n\t\t\t</div>\n\t\t)\n\t);\n};\n\nexport default VideoPlayer;\n","import React from 'react';\nimport VideoPlayer from './containers/VideoPlayer/VideoPlayer';\n\nconst App = () => <VideoPlayer />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/main.scss';\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}